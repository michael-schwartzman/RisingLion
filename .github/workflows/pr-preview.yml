name: PR Preview Comment

on:
  workflow_run:
    workflows: ["Deploy to Azure Kubernetes Service"]
    types:
      - completed

jobs:
  pr-comment:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.conclusion == 'success'
    
    steps:
    - name: Get PR number
      id: pr
      run: |
        PR_NUMBER=$(cat $GITHUB_EVENT_PATH | jq -r '.workflow_run.pull_requests[0].number')
        echo "number=$PR_NUMBER" >> $GITHUB_OUTPUT
        echo "PR Number: $PR_NUMBER"
    
    - name: Create or update PR comment
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = ${{ steps.pr.outputs.number }};
          if (!prNumber || prNumber === 'null') {
            console.log('No PR number found, skipping comment');
            return;
          }
          
          const commentBody = `## ðŸš€ Preview Deployment Ready!
          
          Your PR has been successfully deployed to the staging environment:
          
          **ðŸŽ® Live Preview:** http://games.risinglion.dev/pr-${prNumber}
          
          ### Deployment Details:
          - **Environment:** Staging
          - **Namespace:** \`pr-${prNumber}\`
          - **Commit:** ${context.payload.workflow_run.head_sha.substring(0, 7)}
          
          ### Testing:
          - âœ… Game functionality
          - âœ… Responsive design
          - âœ… Performance metrics
          - âœ… Browser compatibility
          
          The staging environment will be automatically cleaned up when the PR is closed.
          
          ---
          <sub>ðŸ¤– This comment is automatically updated on each commit to this PR.</sub>`;
          
          // Check if comment already exists
          const comments = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber
          });
          
          const botComment = comments.data.find(comment => 
            comment.user.login === 'github-actions[bot]' && 
            comment.body.includes('Preview Deployment Ready!')
          );
          
          if (botComment) {
            // Update existing comment
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: commentBody
            });
            console.log('Updated existing PR comment');
          } else {
            // Create new comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: commentBody
            });
            console.log('Created new PR comment');
          }
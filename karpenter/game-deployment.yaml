apiVersion: apps/v1
kind: Deployment
metadata:
  name: rising-lion-game
  namespace: default
  labels:
    app: rising-lion-game
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rising-lion-game
  template:
    metadata:
      labels:
        app: rising-lion-game
        version: v1
    spec:
      # Node selection to target Karpenter-managed spot nodes
      nodeSelector:
        workload-type: "games"
        provisioning-type: "spot-preferred"
      
      # Toleration for the game workload taint
      tolerations:
        - key: "workload-type"
          value: "games"
          effect: NoSchedule
        - key: "games.io/initializing"
          value: "true"
          effect: NoSchedule
      
      # Prefer spot nodes, but allow scheduling on regular nodes if needed
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: karpenter.sh/capacity-type
                    operator: In
                    values: ["spot"]
            - weight: 50
              preference:
                matchExpressions:
                  - key: node.kubernetes.io/instance-type
                    operator: In
                    values: ["Standard_B2s", "Standard_B2ms", "Standard_D2s_v3", "Standard_D2s_v4", "Standard_D2s_v5"]
      
      containers:
        - name: rising-lion-game
          image: risinglionacr.azurecr.io/rising-lion-game:v4  # Use the existing ACR image
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: http
          
          # Resource requests to trigger node provisioning
          resources:
            requests:
              cpu: "500m"        # 0.5 CPU
              memory: "512Mi"    # 512 MB RAM
            limits:
              cpu: "1000m"       # 1 CPU max
              memory: "1Gi"      # 1 GB RAM max
          
          # Environment variables
          env:
            - name: GAME_MODE
              value: "production"
            - name: NODE_TYPE
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: GAME_TITLE
              value: "Operation Rising Lion"
          
          # Health checks
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          
          # Volume mounts are not needed since game is baked into the image
      
      # No volumes needed since game is baked into the Docker image

---
apiVersion: v1
kind: Service
metadata:
  name: rising-lion-game-service
  namespace: default
  labels:
    app: rising-lion-game
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: rising-lion-game


apiVersion: apps/v1
kind: Deployment
metadata:
  name: combined-games
  labels:
    app: combined-games
spec:
  replicas: 1
  selector:
    matchLabels:
      app: combined-games
  template:
    metadata:
      labels:
        app: combined-games
        workload-type: games
    spec:
      # Force both games to run on the same node using affinity
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values: ["combined-games"]
            topologyKey: kubernetes.io/hostname
      # Target spot nodes with games workload
      nodeSelector:
        workload-type: games
        provisioning-type: spot-preferred
      tolerations:
      - key: workload-type
        operator: Equal
        value: games
        effect: NoSchedule
      - key: games.io/initializing
        operator: Equal
        value: "true"
        effect: NoSchedule
      containers:
      # Rising Lion Game Container
      - name: rising-lion-game
        image: risinglionacr.azurecr.io/rising-lion-game:v4
        ports:
        - containerPort: 80
          name: rising-lion
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 1Gi
        env:
        - name: GAME_MODE
          value: production
        - name: NODE_TYPE
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: GAME_TITLE
          value: Operation Rising Lion
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
      # KittyPong Game Container - using nginx sidecar approach
      - name: kittypong-game
        image: nginx:alpine
        ports:
        - containerPort: 8080
          name: kittypong
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - name: kittypong-html
          mountPath: /usr/share/nginx/html
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: kittypong-html
        configMap:
          name: kittypong-inline-html
      - name: nginx-config
        configMap:
          name: kittypong-nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: combined-games-service
  labels:
    app: combined-games
spec:
  selector:
    app: combined-games
  ports:
  - name: rising-lion
    port: 80
    targetPort: 80
    protocol: TCP
  - name: kittypong
    port: 8080
    targetPort: 8080
    protocol: TCP
  type: ClusterIP